---
import * as fs from 'fs';
import sizeOf from 'image-size';
import '@fontsource/silkscreen';

const imgPath = 'public/goomba';

const gommabs = fs.readdirSync(imgPath);

const goombas = gommabs.map((gomb) => {
	const dimensions = sizeOf(`${imgPath}/${gomb}`);
	return {
		path: gomb,
		height: dimensions.height || 500,
		width: dimensions.width || 300
	};
});
---

<div hidden data-goombas={JSON.stringify(goombas)}></div>

<script>
	import { gooma_anim } from '../goomba';
	// @ts-ignore
	const goombas = JSON.parse(document.querySelector('[data-goombas]')!.dataset.goombas) as {
		path: string;
		height: number;
		width: number;
	}[];

	const canvas = document.getElementById('game-canvas') as HTMLCanvasElement;
	canvas.onclick = handleMouse;
	const scoreEl = document.getElementById('score') as HTMLHeadingElement;
	const highscoreEl = document.getElementById('high-score') as HTMLHeadingElement;

	const setWinner = (value: number) => {
		const win = document.querySelector('.win') as HTMLDivElement;
		const finalScore = document.getElementById('final-score') as HTMLHeadingElement;
		const newHighScore = document.querySelector('.new-high-score') as HTMLParagraphElement;

		finalScore.innerText = value.toString();
		win.style.display = 'flex';

		if (value > Number(highscoreEl.innerText)) {
			newHighScore.innerText = 'New high score!';
		}
	};

	let highscore = 0;
	let score = 0;

	const animation = gooma_anim({
		canvas,
		goombas,
		set highscore(value: number) {
			highscore = value;
			highscoreEl.innerText = value.toString();
		},
		get highscore() {
			return highscore;
		},
		set score(value: number) {
			score = value;
			scoreEl.innerText = value.toString();
		},
		get score() {
			return score;
		},
		setWinner
	});

	function handleMouse(evt: MouseEvent) {
		const x = evt.x;
		const y = evt.y;

		animation.add(x, y);
	}
</script>

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" href="/favicon.ico" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Goomba Stack</title>
	</head>
	<body>
		<canvas id="game-canvas"></canvas>

		<div>
			<h1>Goomba Stack!</h1>
			<h2>Score: <span id="score"></span></h2>
			<h2>High score: <span id="high-score"></span></h2>
		</div>

		<div class="win" style="display: none;">
			<p>Winner!!!!</p>
			<p>Score: <span id="final-score"></span> goombas!</p>
			<p class="new-high-score"></p>
			<button onclick="window.location.reload()">Play Again?</button>
		</div>
	</body>
</html>

<style>
	body {
		margin: 0;
		overflow: hidden;
		background: url('/background.png');
		background-size: auto 100%;
		font-family: 'Silkscreen';
		user-select: none;
	}

	button {
		margin-top: 1em;
		font-family: 'Silkscreen';
		font-size: inherit;
		background: #99ffdf;
		border: none;
	}

	div {
		position: absolute;
		top: 5%;
		left: 5%;
		color: white;
	}

	.win {
		display: flex;
		gap: 0.1em;
		width: 100vw;
		top: 0;
		left: 0;
		height: 100vh;
		font-size: 300%;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.win p {
		margin: 0;
		background: black;
	}
</style>
